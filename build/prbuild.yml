# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the OneESPT template
# If you are not using the E+D shared hosted pool with windows-2022, replace the pool section with your hosted pool, os, and image name. If you are using a Linux image, you must specify an additional windows image for SDL: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/overview#how-to-specify-a-windows-pool-for-the-sdl-source-analysis-stage
name: $(date:yyyy-MM-dd)$(rev:.rr)
trigger: none
pr: none
variables:
- name: BuildPlatform
  value: 'x86'
- name: CreateAxeWindowsNugetPackage
  value: 'true'
- name: CreateAxeWindowsZippedCLI
  value: 'true'
- name: PublicRelease
  value: 'false'
- name: SignAppForRelease
  value: 'false'
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: __default
      jobs:
      - job: Release
        steps:
        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet 5.x'
          inputs:
            versionSpec: '5.x'
        - task: NuGetCommand@2
          displayName: 'NuGet restore'
        - task: DotNetCoreCLI@2
          displayName: 'dotnet restore'
          inputs:
            command: restore
            projects: |
              **\*.csproj
        - task: PowerShell@2
          displayName: 'License Header Check'
          inputs:
            targetType: "filePath"
            filePath: tools\scripts\verification.scripts\LicenseHeaderVerification.ps1
            arguments: '-target  $(Build.Repository.LocalPath) -licenseHeaderPath tools\scripts\verification.scripts\LicenseHeader.txt -extensions *.xaml,*.xml,*.cs,*.ps1 -addIfAbsent $false'
        - task: PowerShell@2
          displayName: 'Resource String Translator Comment Check'
          inputs:
            targetType: "filePath"
            filePath: tools\scripts\verification.scripts\ResourceStringCommentVerification.ps1
            arguments: '-target  $(Build.Repository.LocalPath)'
        - task: VSBuild@1
          displayName: 'Build Solution **\*.sln'
          inputs:
            vsVersion: 17.0
            platform: '$(BuildPlatform)'
            configuration: release
        - task: CopyFiles@2
          displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
          inputs:
            Contents: '**\bin\release\**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: DotNetCoreCLI@2
          displayName: 'Test Assemblies (.NET Core) **\*test*.csproj'
          inputs:
            arguments: --no-build --blame --verbosity normal --configuration release
            command: test
            projects: |
              **\*test*.csproj
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact: drop'
      - job: Debug
        steps:
        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet 5.x'
          inputs:
            versionSpec: '5.x'
        - task: NuGetCommand@2
          displayName: 'NuGet restore'
        - task: DotNetCoreCLI@2
          displayName: 'dotnet restore'
          inputs:
            command: restore
            projects: |
              **\*.csproj
        - task: VSBuild@1
          displayName: 'Build Solution **\*.sln'
          inputs:
            vsVersion: 17.0
            platform: '$(BuildPlatform)'
            configuration: debug
        - task: CopyFiles@2
          displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
          inputs:
            Contents: '**\bin\debug\**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: DotNetCoreCLI@2
          displayName: 'Test Assemblies (.NET Core) **\*test*.csproj'
          inputs:
            arguments: --no-build --blame --verbosity normal --configuration debug /p:CollectCoverage=true /p:CoverletOutput=./CodeCoverage/ /p:CoverletOutputFormat=cobertura
            command: test
            projects: |
              **\*test*.csproj
        - task: CmdLine@2
          displayName: 'Upload coverage to codecov.io'
          inputs:
            script: $(USERPROFILE)\.nuget\packages\codecov\$(CODECOV_VERSION)\tools\win7-x86\codecov.exe -t $(CODECOV_TOKEN) -f **/*coverage.cobertura.xml
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact: drop'
      - job: CheckDependencies
        displayName: Check Dependencies
        condition: succeeded()
        steps:
        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet 5.x'
          inputs:
            versionSpec: '5.x'
        - task: NuGetCommand@2
          displayName: 'NuGet restore'
        - task: PowerShell@2
          displayName: 'Check ClearlyDefined'
          inputs:
            filePath: '$(Build.SourcesDirectory)\tools\scripts\pipeline\build\clearly-defined\check-clearly-defined.ps1'
            arguments: '-Verbose -PipelineType ado'