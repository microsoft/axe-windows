<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BoundingRectangleNotValidButOffScreen" xml:space="preserve">
    <value>Remove the BoundingRectangle property when the element is off-screen.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "BoundingRectangle" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ButtonWithSplitButtonParentPattern" xml:space="preserve">
    <value>Modify the button to support exactly one of the following patterns:
 · Support the Invoke pattern if the button performs a command at the request of the user.
 · Support the Toggle pattern if the button can cycle through a series of up to three states.
 · Support the ExpandCollapse pattern if the button shows or hides additional content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Invoke", "Toggle", and "ExpandCollapse" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="SiblingUniqueAndNotFocusable" xml:space="preserve">
    <value>Verify that each element has a meaningful UI Automation Name property.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ComboBoxShouldNotSupportScrollPattern" xml:space="preserve">
    <value>Modify the combo box to not support the Scroll pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Scroll" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldNotSupportValuePattern" xml:space="preserve">
    <value>Modify the element to not support the Value pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Value" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldNotSupportWindowPattern" xml:space="preserve">
    <value>Modify the element to not support the Window pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Window" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="HelpTextNotEqualToName" xml:space="preserve">
    <value>Write meaningful text for the element's UI Automation HelpText property. This text is typically similar to, or taken from, a tooltip or placeholder, such as "type here to search".</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "HelpText" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsContentElementFalseOptional" xml:space="preserve">
    <value>Set the IsContentElement UI Automation property to false.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsContentElement" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsContentElementTrueOptional" xml:space="preserve">
    <value>Set the IsContentElement UI Automation property to true.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsContentElement" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsControlElementTrueOptional" xml:space="preserve">
    <value>Set the IsControlElement UI Automation property to true.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsControlElement" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsKeyboardFocusableShouldBeTrue" xml:space="preserve">
    <value>Set the IsKeyboardFocusable UI Automation property to true.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsKeyboardFocusable" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsKeyboardFocusableFalseButDisabled" xml:space="preserve">
    <value>If this element is still reachable via the keyboard even when it is disabled, set the IsKeyboardFocusable UI Automation property to true.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsKeyboardFocusable" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsKeyboardFocusableForListItemShouldBeTrue" xml:space="preserve">
    <value>Make this element focusable instead of its children.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="IsKeyboardFocusableFalseButOffscreen" xml:space="preserve">
    <value>If this element is still reachable via the keyboard even when it is off-screen, set the IsKeyboardFocusable UI Automation property to true.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsKeyboardFocusable" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsKeyboardFocusableForCustomShouldBeTrue" xml:space="preserve">
    <value>Ensure that this element can be manipulated via the keyboard, then set the IsKeyboardFocusable UI Automation property to true.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsKeyboardFocusable" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsKeyboardFocusableDescendantTextPattern" xml:space="preserve">
    <value>Set the IsKeyboardFocusable property to be false.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "IsKeyboardFocusable" and "Text" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="IsKeyboardFocusableOnEmptyContainer" xml:space="preserve">
    <value>If this container should be discoverable by keyboard users, set the IsKeyboardFocusable UI Automation property to true. Otherwise, consider changing the ControlType.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "IsKeyboardFocusable" and "ControlType" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="IsKeyboardFocusableShouldBeFalse" xml:space="preserve">
    <value>Set the IsKeyboardFocusable UI Automation property to false. If this element really should be reachable via the keyboard, verify its ControlType.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "IsKeyboardFocusable" and "ControlType" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="IsKeyboardFocusableTopLevelTextPattern" xml:space="preserve">
    <value>Set the IsKeyboardFocusable UI Automation property to true.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsKeyboardFocusable" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ItemStatusExists" xml:space="preserve">
    <value>Add a meaningful ItemStatus UI Automation property to this element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "ItemStatus" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedControlTypeReasonable" xml:space="preserve">
    <value>Set a meaningful LocalizedControlType UI Automation property for this element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ItemTypeRecommended" xml:space="preserve">
    <value>If necessary, set the ItemType UI Automation property for this element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "ItemType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameEmptyButElementNotKeyboardFocusable" xml:space="preserve">
    <value>Set the UI Automation Name property for the given element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" (with uppercase N) should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameNoSiblingsOfSameType" xml:space="preserve">
    <value>Set the UI Automation Name property of this element to be null or empty if the element has no siblings of the same type.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameNullButElementNotKeyboardFocusable" xml:space="preserve">
    <value>Set the UI Automation Name property for the given element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" (with uppercase N) should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameOnCustomWithParentWPFDataItem" xml:space="preserve">
    <value>Set the UI Automation Name property of this custom control to be empty.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Name" and "dataitem" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="NameOnOptionalType" xml:space="preserve">
    <value>Remove the UI Automation Name property for this element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameWithValidBoundingRectangle" xml:space="preserve">
    <value>Modify the UI Automation Name property to have a valid BoundingRectangle (i.e. the BoundingRectangle is not null and has area).</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Name" and "BoundingRectangle" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="Structure" xml:space="preserve">
    <value>Set the element to conform to the following structure: {0}.</value>
    <comment>Brief guidance on how to fix an accessibility problem. Developers: {0} is the element structure.</comment>
  </data>
  <data name="SelectionPatternSelectionRequired" xml:space="preserve">
    <value>Set the element's IsSelectionRequired property of the SelectionPattern to TRUE.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "IsSelectionRequired" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ButtonInvokeAndExpandCollapsePatterns" xml:space="preserve">
    <value>Modify the button to support exactly one of the following patterns:
 · Support the Invoke pattern if the button performs a command at the request of the user.
 · Support the ExpandCollapse pattern if the button shows or hides additional content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Invoke", "Toggle", and "ExpandCollapse" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ButtonShouldHavePatterns" xml:space="preserve">
    <value>Modify the button to support exactly one of the following patterns:
 · Support the Invoke pattern if the button performs a command at the request of the user.
 · Support the Toggle pattern if the button can cycle through a series of up to three states.
 · Support the ExpandCollapse pattern if the button shows or hides additional content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Invoke", "Toggle", and "ExpandCollapse" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ButtonInvokeAndTogglePatterns" xml:space="preserve">
    <value>Modify the button to support exactly one of the following patterns:
 · Support the Invoke pattern if the button performs a command at the request of the user.
 · Support the Toggle pattern if the button can cycle through a series of up to three states.
 · Support the ExpandCollapse pattern if the button shows or hides additional content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Invoke", "Toggle", and "ExpandCollapse" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ButtonToggleAndExpandCollapsePatterns" xml:space="preserve">
    <value>Modify the button to support exactly one of the following patterns:
 · Support the Invoke pattern if the button performs a command at the request of the user.
 · Support the Toggle pattern if the button can cycle through a series of up to three states.
 · Support the ExpandCollapse pattern if the button shows or hides additional content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Invoke", "Toggle", and "ExpandCollapse" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ProgressBarRangeValue" xml:space="preserve">
    <value>Implement the progress bar's RangeValue pattern using the following properties and values:
 · Minimum: 0.0
 · Maximum: 100.0
 · IsReadOnly: TRUE</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "RangeValue", "Minimum", "Maximum", and "IsReadOnly" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="EditSupportsIncorrectRangeValuePattern" xml:space="preserve">
    <value>Implement the edit control's RangeValue pattern with a null LargeChange property.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "RangeValue" and "LargeChange" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="SplitButtonInvokeAndTogglePatterns" xml:space="preserve">
    <value>Modify the split button to support exactly one of the following patterns:
 · Support the Invoke pattern if the button performs a command at the request of the user.
 · Support the Toggle pattern if the button can cycle through a series of up to three states.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Invoke" and "Toggle" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldNotSupportInvokePattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. Modify the element to support only its allowed patterns.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "ControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldNotSupportScrollPattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. Modify the element to support only its allowed patterns.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "ControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldNotSupportTogglePattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. Modify the element to support only its allowed patterns.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "ControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldSupportExpandCollapsePattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. If the current ControlType is correct, modify the element to support the ExpandCollapse pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "ExpandCollapse" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldSupportGridItemPattern" xml:space="preserve">
    <value>Modify the element (or one of its children) to support the GridItem pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "GridItem" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldSupportGridPattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. If the current ControlType is correct, modify the element to support the Grid pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "Grid" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldSupportInvokePattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. If the current ControlType is correct, modify the element to support the Invoke pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "Invoke" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldSupportScrollItemPattern" xml:space="preserve">
    <value>Modify the element (or one of its children) to support the ScrollItem pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "ScrollItem" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldSupportSelectionItemPattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. If the current ControlType is correct, modify the element to support the SelectionItem pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "SelectionItem" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldSupportSelectionPattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. If the current ControlType is correct, modify the element to support the Selection pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "Selection" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldSupportSpreadsheetItemPattern" xml:space="preserve">
    <value>Modify the element (or one of its children) to support the SpreadsheetItem pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "SpreadsheetItem" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldSupportTableItemPattern" xml:space="preserve">
    <value>Modify the element (or one of its children) to support the TableItem pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "TableItem" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldSupportTablePattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. If the current ControlType is correct, modify the element to support the Table pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "Table" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldSupportTextPattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. If the current ControlType is correct, modify the element to support the Text pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "Text" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldSupportTogglePattern" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. If the current ControlType is correct, modify the element to support the Toggle pattern.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType" and "Toggle" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ControlShouldSupportTransformPattern" xml:space="preserve">
    <value>If the element can be resized, implement the Transform pattern.
If the element can't be resized, ensure the TransformPattern_CanResize property is FALSE.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "Transform" and "TransformPattern_CanResize" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ChildrenNotAllowedInContentView" xml:space="preserve">
    <value>Make sure all of the element's children have the IsContentElement property set to FALSE.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsContentElement" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="SelectionPatternSingleSelection" xml:space="preserve">
    <value>1. Make sure the element has the appropriate ControlType property for its function.
2. Make sure Selection is the correct pattern.
3. Set the element's CanSelectMultiple property to FALSE.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ControlType", "Selection", and "CanSelectMultiple" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="SelectionItemPatternSingleSelection" xml:space="preserve">
    <value>Do one of the following:
 1. Modify the element and/or its siblings so that only one of them is selected at any given time, OR
 2. Modify the parent element so its CanSelectMultiple property is TRUE.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "CanSelectMultiple" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ParentChildShouldNotHaveSameNameAndLocalizedControlType" xml:space="preserve">
    <value>Provide unique names for controls that have a parent/child relationship and the same ControlType property.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "ControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="SiblingUniqueAndFocusable" xml:space="preserve">
    <value>Provide unique names for sibling controls that have the same ControlType property.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "ControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ControlShouldSupportSetInfo" xml:space="preserve">
    <value>Provide valid values for the SizeOfSet and PositionInSet properties.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "SizeOfSet" and "PositionInSet" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="BoundingRectangleCompletelyObscuresContainer" xml:space="preserve">
    <value>Modify one or both bounding rectangles to ensure that the bounding rectangle of the container element is not completely obscured.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="BoundingRectangleContainedInParent" xml:space="preserve">
    <value>Modify one or both bounding rectangles to ensure that the element's bounding rectangle is contained within the bounding rectangle of its parent.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="BoundingRectangleDataFormatCorrect" xml:space="preserve">
    <value>Make sure the BoundingRectangle property returns data in the expected format:
 1. Specify the rectangle as an array with a type of double and a size of 4.
 2. Specify the rectangle's position and size (in pixels) by providing array values in the following order:
    a. Top edge
    b. Left edge
    c. Width
    d. Height</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "BoundingRectangle" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="BoundingRectangleNotAllZeros" xml:space="preserve">
    <value>Specify the rectangle's position and size (in pixels) by providing array values in the following order:
 1. Top edge
 2. Left edge
 3. Width
 4. Height</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="BoundingRectangleNotNull" xml:space="preserve">
    <value>If the element is off-screen, set its IsOffscreen property to TRUE.
If the element is on-screen, provide a BoundingRectangle property.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "IsOffscreen" and "BoundingRectangle" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="BoundingRectangleSizeReasonable" xml:space="preserve">
    <value>Modify the BoundingRectangle property so that its width and height define an area of at least 25 pixels.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "BoundingRectangle" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="HeadingLevelDescendsWhenNested" xml:space="preserve">
    <value>Modify the heading levels and/or nesting structure of the element and/or its ancestors.
For example, if an element has a level-5 heading, its descendants can have only level-5 or level-6 headings.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="IsContentElementPropertyExists" xml:space="preserve">
    <value>Provide a value for the element's IsContentElement property:
 · If the element should be included in the content view, set the property to TRUE.
 · If the element should not be included in the content view, set the property to FALSE.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsContentElement" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsControlElementPropertyExists" xml:space="preserve">
    <value>Provide a value for the element's IsControlElement property:
 · If the element should be included in the control view, set the property to TRUE.
 · If the element should not be included in the control view, set the property to FALSE.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsControlElement" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="IsControlElementTrueRequired" xml:space="preserve">
    <value>Set the element's IsControlElement property to TRUE.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "IsControlElement" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LandmarkBannerIsTopLevel" xml:space="preserve">
    <value>Modify the banner element so it does not descend from any other landmark.
      Exception: If a page has nested document or application roles, each nested document or application may have one banner landmark.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="LandmarkComplementaryIsTopLevel" xml:space="preserve">
    <value>Modify the complementary landmark so it does not descend from any other landmark.
      Exception: If a page has nested document or application roles, each nested document or application may have one complementary landmark.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="LandmarkContentInfoIsTopLevel" xml:space="preserve">
    <value>Modify the contentinfo landmark so it does not descend from any other landmark.
      Exception: If a page has nested document or application roles, each nested document or application may have one contentinfo landmark.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="LandmarkMainIsTopLevel" xml:space="preserve">
    <value>Modify the main landmark so it does not descend from any other landmark.
      Exception: If a page has nested document or application roles, each nested document or application may have one main landmark.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="LandmarkNoDuplicateBanner" xml:space="preserve">
    <value>Use the banner landmark only once per page.
      Exception: If a page has nested document or application roles, each nested document or application may have a banner landmark.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="LandmarkNoDuplicateContentInfo" xml:space="preserve">
    <value>Use the contentinfo landmark only once per page.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="LocalizedLandmarkTypeIsReasonableLength" xml:space="preserve">
    <value>Provide a string for the LocalizedLandmarkType property that contains at most 64 characters.
Where appropriate, use a standard localized landmark type:
 · Use "banner" for an area at the beginning of the page with site-oriented content.
 · Use "complementary" for an area with supporting content that remains meaningful when separated from the primary content.
 · Use "contentinfo" for an area at the end of the page containing information about the site or the primary content.
 · Use "form" for an area containing a set of form-related elements.
 · Use "main" for the area with the page's primary content.
 · Use "navigation" for an area containing links for page or site navigation.
 · Use "search" for an area of the page containing search functionality.
If none of the standard landmark types is applicable, provide a string that concisely describes its content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedLandmarkType" (written without spaces) should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedLandmarkTypeNotCustom" xml:space="preserve">
    <value>Provide string for the LocalizedLandmarkType property that does not include "custom."
Where appropriate, use a standard localized landmark type:
 · Use "banner" for an area at the beginning of the page with site-oriented content.
 · Use "complementary" for an area with supporting content that remains meaningful when separated from the primary content.
 · Use "contentinfo" for an area at the end of the page containing information about the site or the primary content.
 · Use "form" for an area containing a set of form-related elements.
    ·         Use "main" for the area with the page's primary content.
    ·         Use "navigation" for an area containing links for page or site navigation.
    ·         Use "search" for an area of the page containing search functionality.
If none of the standard landmark types is applicable, provide a string that concisely describes its content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedLandmarkType" (written without spaces) should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedLandmarkTypeNotEmpty" xml:space="preserve">
    <value>Provide a string for the LocalizedLandmarkType property.
Where appropriate, use a standard localized landmark type:
 · Use "banner" for an area at the beginning of the page with site-oriented content.
 · Use "complementary" for an area with supporting content that remains meaningful when separated from the primary content.
 · Use "contentinfo" for an area at the end of the page containing information about the site or the primary content.
 · Use "form" for an area containing a set of form-related elements.
 · Use "main" for the area with the page's primary content.
    ·         Use "navigation" for an area containing links for page or site navigation.
    ·         Use "search" for an area of the page containing search functionality.
If none of the standard landmark types is applicable, provide a string that concisely describes its content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedLandmarkType" (written without spaces) should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedLandmarkTypeNotNull" xml:space="preserve">
    <value>Provide a LocalizedLandmarkType property for the element.
Where appropriate, use a standard localized landmark type:
 · Use "banner" for an area at the beginning of the page with site-oriented content.
 · Use "complementary" for an area with supporting content that remains meaningful when separated from the primary content.
 · Use "contentinfo" for an area at the end of the page containing information about the site or the primary content.
 · Use "form" for an area containing a set of form-related elements.
 · Use "main" for the area with the page's primary content.
 · Use "navigation" for an area containing links for page or site navigation.
 · Use "search" for an area of the page containing search functionality.
If none of the standard landmark types is applicable, provide a string that concisely describes its content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedLandmarkType" (written without spaces) should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedLandmarkTypeNotWhiteSpace" xml:space="preserve">
    <value>Provide a string for the LocalizedLandmarkType property.
Where appropriate, use a standard localized landmark type:
 · Use "banner" for an area at the beginning of the page with site-oriented content.
 · Use "complementary" for an area with supporting content that remains meaningful when separated from the primary content.
 · Use "contentinfo" for an area at the end of the page containing information about the site or the primary content.
 · Use "form" for an area containing a set of form-related elements.
 · Use "main" for the area with the page's primary content.
 · Use "navigation" for an area containing links for page or site navigation.
 · Use "search" for an area of the page containing search functionality.
If none of the standard landmark types is applicable, provide a string that concisely describes its content.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedLandmarkType" (written without spaces) should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedControlTypeNotCustom" xml:space="preserve">
    <value>Sufficient:
Provide a string for the LocalizedControlType property that concisely describes the control's function or purpose.

Better:
If possible, use a predefined (non-custom) control type and the default localized control type. The UIA framework will provide the correct localized control type automatically.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedControlTypeNotCustomWPFGridCell" xml:space="preserve">
    <value>{0}
    
If your application targets a version of .NET Framework before 4.7.1, but is running on a system where .NET version 4.7.1 or higher is installed, you may be able to address this issue by taking advantage of accessibility enhancements in .NET 4.7.1. To do this, you will need to enable accessibility switches as described on the following page: https://docs.microsoft.com/en-us/dotnet/framework/whats-new/whats-new-in-accessibility#accessibility-switches</value>
    <comment>Brief guidance on how to fix an accessibility problem. If you know it, replace en-us in the URL with the IETF language code of the target language (es-es for Spanish, de-de for German, etc.), but otherwise do not localize the URL.</comment>
  </data>
  <data name="LocalizedControlTypeNotEmpty" xml:space="preserve">
    <value>Provide a string for the LocalizedControlType property that concisely describes the control's type.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedControlTypeNotNull" xml:space="preserve">
    <value>Provide a string for the LocalizedControlType property that concisely describes the control's type.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="LocalizedControlTypeNotWhiteSpace" xml:space="preserve">
    <value>Provide a string for the LocalizedControlType property that concisely describes the control's type.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "LocalizedControlType" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="OrientationPropertyExists" xml:space="preserve">
    <value>Provide an Orientation property for the element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Orientation" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameExcludesControlType" xml:space="preserve">
    <value>Provide a UI Automation Name property for the element that:
 · Concisely identifies the element, AND
 · Does not include the control type.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameExcludesLocalizedControlType" xml:space="preserve">
    <value>Provide a UI Automation Name property for the element that:
 · Concisely identifies the element, AND
 · Does not include the same text as the element's LocalizedControlType property.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "name" and "LocalizedControlType" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="NameIsInformative" xml:space="preserve">
    <value>Provide a UI Automation Name property for the element that:
 · Concisely identifies the element, AND
 · Does not include the element's class name (such as Microsoft.*.* or Windows.*.*).</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameNotEmpty" xml:space="preserve">
    <value>Provide a UI Automation Name property that concisely identifies the element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameNotNull" xml:space="preserve">
    <value>Provide a UI Automation Name property that concisely identifies the element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameNotWhiteSpace" xml:space="preserve">
    <value>Provide a UI Automation Name property that concisely identifies the element.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="NameReasonableLength" xml:space="preserve">
    <value>Provide a UI Automation Name property for the element that:
 · Concisely identifies the element, AND
 · Contains at most 512 characters.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The term "Name" should not be translated (i.e. it should be treated as a loanword).</comment>
  </data>
  <data name="ListItemSiblingsUnique" xml:space="preserve">
    <value>Provide unique names for sibling list items.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="HyperlinkNameShouldBeUnique" xml:space="preserve">
    <value>If the sibling hyperlink with the same Name navigates to a different destination, change the Name of either hyperlink.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="PropertyExcludesPrivateUnicodeCharacters" xml:space="preserve">
    <value>Modify the {0} property, removing all characters in the range U+E000 to U+F8FF and replace them with meaningful, standard text content.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="ClickablePointOnScreen" xml:space="preserve">
    <value>If the element's ClickablePoint property is correct, set the element's IsOffScreen property to false.
If the element's ClickablePoint property is incorrect, please ensure it returns the correct value.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ClickablePoint" and "IsOffscreen" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="ClickablePointOffScreen" xml:space="preserve">
    <value>If the element's ClickablePoint property is correct, set the element's IsOffScreen property to true.
If the element's ClickablePoint property is incorrect, please ensure it returns the correct value.</value>
    <comment>Brief guidance on how to fix an accessibility problem. The terms "ClickablePoint" and "IsOffscreen" should not be translated (i.e. they should be treated as loanwords).</comment>
  </data>
  <data name="FrameworkDoesNotSupportUIAutomation" xml:space="preserve">
    <value>Switch your application to a framework that supports UI Automation.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="EdgeBrowserHasBeenDeprecated" xml:space="preserve">
    <value>The non-Chromium version of Edge has reached its end of life and should not be used for current product development. Please migrate your application to a supported browser.</value>
    <comment>Brief guidance on how to fix an accessibility problem.</comment>
  </data>
  <data name="ChromiumComponentsShouldUseWebScanner" xml:space="preserve">
    <value>Use a web-based scanner (for example, Accessibility Insights for Web) to scan this component.</value>
    <comment>Brief guidance on how to fix a scan problem.</comment>
  </data>
</root>