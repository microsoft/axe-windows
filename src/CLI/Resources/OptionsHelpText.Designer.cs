//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AxeWindowsCLI.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class OptionsHelpText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal OptionsHelpText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AxeWindowsCLI.Resources.OptionsHelpText", typeof(OptionsHelpText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If specified, always save the test file. By default, the test file is saved only if errors are found..
        /// </summary>
        public static string AlwaysSaveTestFile {
            get {
                return ResourceManager.GetString("AlwaysSaveTestFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to a configuration file specifying custom UI Automation attributes.
        /// </summary>
        public static string CustomUia {
            get {
                return ResourceManager.GetString("CustomUia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many seconds to delay before triggering the scan. Valid range is 0 to 60 seconds, with a default of 0..
        /// </summary>
        public static string DelayInSeconds {
            get {
                return ResourceManager.GetString("DelayInSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directory.
        /// </summary>
        public static string OutputDirectory {
            get {
                return ResourceManager.GetString("OutputDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process Id.
        /// </summary>
        public static string ProcessId {
            get {
                return ResourceManager.GetString("ProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process Name.
        /// </summary>
        public static string ProcessName {
            get {
                return ResourceManager.GetString("ProcessName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan ID.
        /// </summary>
        public static string ScanId {
            get {
                return ResourceManager.GetString("ScanId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HWND for a UI Automation element whose sub-tree should be scanned.
        /// </summary>
        public static string ScanRootWindowHandle {
            get {
                return ResourceManager.GetString("ScanRootWindowHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Third Party Notices (opens file in browser without executing scan). If specified, all other options will be ignored..
        /// </summary>
        public static string ShowThirdPartyNotices {
            get {
                return ResourceManager.GetString("ShowThirdPartyNotices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If specified, causes Chromium HTML content to be scanned. Chromium HTML content is ignored without this flag. This is intended primarily for browser development teams and is discouraged for other scenarios..
        /// </summary>
        public static string TestAllChromiumContent {
            get {
                return ResourceManager.GetString("TestAllChromiumContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verbosity level (Quiet/Default/Verbose).
        /// </summary>
        public static string Verbosity {
            get {
                return ResourceManager.GetString("Verbosity", resourceCulture);
            }
        }
    }
}
